<template name="39a44234"><view class="_view data-v-6bff4c82 content"><view class="_view data-v-6bff4c82 msg-header"><view class="_view data-v-6bff4c82 title"><text class="_text data-v-6bff4c82">一个比Spring Boot快44倍的Java框架</text></view><view class="_view data-v-6bff4c82 user-info"><view class="_view data-v-6bff4c82 user-info-left"><image src="../../static/104.jpg" class="_image data-v-6bff4c82 avatar"></image><text class="_text data-v-6bff4c82 nickname">java高并发</text></view><view class="_view data-v-6bff4c82 followed"><text class="_text data-v-6bff4c82 followed">+ 关注</text></view></view><view class="_view data-v-6bff4c82 msg-info"><text class="_text data-v-6bff4c82 left">字数  1090·阅读 1035</text><text class="_text data-v-6bff4c82 left">2019-04-04   22:12</text></view><view class="_view data-v-6bff4c82 text-content"><text class="_text data-v-6bff4c82 msg">最近栈长看到一个框架，官方号称可以比 Spring Boot 快 44 倍，居然这么牛逼，有这么神奇吗？今天带大家来认识一下。

                    这个框架名叫：light-4j。

                    官网简介：A fast, lightweight and more productive microservices framework

                    很简单，翻译过来就是：一个快速、轻量级和更高效的微服务框架。

                    为什么叫light-4j？
                    全称应该是：Light for Java，意味着轻量级，并以闪电般的速度来使用 Java 编程。

                    这个框架有什么用？
                    1、降低成本

                    为什么说它能降低成本，因为它速度非常快，占用内存也非常小。

                    重点来了，它比类似 Spring Boot 这种内嵌 Tomcat 式的主流微服务框架平台要快 44 倍，并且只需要用其 1/5 内存，听起来是不是很牛逼，确实是节约了不少内存空间。

                    这里有一份 benchmark 的测试报告，它与 Spring Boot 及其他微服务平台作了一个比较：

                    详细报告：https://github.com/networknt/microservices-framework-benchmark

                    很强大，性能与 Go 语言并肩，并且拥有更低的平均延迟。

这里还有一份与其他 web 框架的对比：

详细报告：https://www.techempower.com/benchmarks/#section=data-r15&hw=ph&test=plaintext

性能表现非常靠前，吊打 Spring 等各种框架!

2、丰富的特性

带有启动/关闭钩子和各种中间件的插件架构
分布式OAuth2 JWT安全验证作为框架的一部分
基于OpenAPI规范进行请求和响应验证
收集测量指标并支持服务和客户端在控制台显示
全局运行时异常处理，如API异常及其他受检查异常
在日志输出前加密敏感数据，如：信用卡、SIN号等
为请求参数、请求头、BODY清除跨站攻击脚本
重要信息或整个请求/响应的审计
请求体支持各种类型的content-type
配置标准化响应码及响应消息
支持外部配置化Docker环境所有模块
来自其他域名的跨域处理
支持对外提供的服务限速处理
服务发现与注册支持直连、Consul和Zookeeper
客户端侧发现和负载平衡，消除代理层
与Light-OAuth2紧密集成并支持可跟踪性
栈长先介绍到这，大家感兴趣的可以去 Github 捣鼓……

Github地址：https://github.com/networknt/light-4j

栈长有话说
看完你可能觉得呵呵了，有人用吗？

这个栈长我目前没有可靠数据，但这个框架的性能表现和内存消耗真的非常惊人，以及它的各种功能特性都值得借鉴。

至于比 Spring Boot 框架要快 44 倍，这个大家也不用太纠结，Spring 发展到今天，经过国外各种大神的打磨，可以说是非常精湛。

Spring 日益宠大的同时，其内部依赖集成了太多东西，在性能这方面没其他框架强，确实能够理解，但 Spring 的生态圈是没有任何框架可以比拟的。在追求性能的同时，它肯定也会牺牲很多东西，所以，我觉得一个生态繁荣的技术平台比追求性能更重要。

最后，你们有公司用过这个框架吗？你对这个框架怎么看，欢迎留言讨论~

欢迎工作一到五年的Java工程师朋友们加入Java高并发： 957734884，

群内提供免费的Java架构学习资料（里面有高可用、高并发、高性能及分布式、Jvm性能调优、Spring源码，MyBatis，Netty,Redis,Kafka,Mysql,Zookeeper,Tomcat,Docker,Dubbo,Nginx等多个知识点的架构资料）

合理利用自己每一分每一秒的时间来学习提升自己，不要再用"没有时间“来掩饰自己思想上的懒惰！趁年轻，使劲拼，给未来的自己一个交代</text></view><view class="_view data-v-6bff4c82 btn-box"><view class="_view data-v-6bff4c82 btn">Spring-Boot  ></view><view class="_view data-v-6bff4c82 btn">Java高开发  ></view></view><view class="_view data-v-6bff4c82 msg-bottom"><view class="_view data-v-6bff4c82 bottom-left"><view wx:if="{{like}}" class="_view data-v-6bff4c82"><image src="../../static/like.png" class="_image data-v-6bff4c82 like" bindtap="handleProxy" data-eventid="{{'39a44234-0'}}" data-comkey="{{$k}}"></image><text style="margin-left: 15rpx;" class="_text data-v-6bff4c82">{{number}}</text></view><view wx:if="{{!like}}" class="_view data-v-6bff4c82"><image src="../../static/select-like.png" class="_image data-v-6bff4c82 like" bindtap="handleProxy" data-eventid="{{'39a44234-1'}}" data-comkey="{{$k}}"></image><text style="margin-left: 15rpx;" class="_text data-v-6bff4c82">{{number}}</text></view></view><view class="_view data-v-6bff4c82 bottom-left"><image src="../../static/wx.png" style="margin-right: 30rpx;" class="_image data-v-6bff4c82"></image><image src="../../static/朋友圈.png" style="margin-right: 30rpx;" class="_image data-v-6bff4c82"></image><text class="_text data-v-6bff4c82 more">···</text></view></view></view><view class="_view data-v-6bff4c82 gift"><text class="_text data-v-6bff4c82 gift-title">小礼物走一走,来简书关注我</text><button class="_button data-v-6bff4c82 gift-btn">赞赏支持</button></view><view class="_view data-v-6bff4c82 msg-recommand"><text class="_text data-v-6bff4c82 recommand">相关推荐</text><view class="_view data-v-6bff4c82 msg2" wx:key="index" key="{{index}}" wx:for="{{msgs}}" wx:for-index="index" wx:for-item="msg"><view class="_view data-v-6bff4c82 msg-recommand-left"><text class="_text data-v-6bff4c82 msgs-title">{{msg.title}}</text><text class="_text data-v-6bff4c82 read-number">阅读  {{msg.number}}</text></view><view class="_view data-v-6bff4c82 msg-recommand-right"><image src="{{msg.cover}}" class="_image data-v-6bff4c82"></image></view></view></view><view class="_hr data-v-6bff4c82"></view><view class="_view data-v-6bff4c82 comment"><view class="_view data-v-6bff4c82 comment-header"><view class="_view data-v-6bff4c82 comment-header-left" style="margin-left: 40rpx;"><text class="_text data-v-6bff4c82 comment-number">评论(1)</text><view class="_view data-v-6bff4c82 condition" style="margin-left: 20rpx; margin-top: 45rpx;">只看作者</view></view><view class="_view data-v-6bff4c82 comment-header-right" style="margin-right: 40rpx;"><text class="_text data-v-6bff4c82 comment-number ">按时间倒序</text></view></view><view class="_view data-v-6bff4c82 comment-content"><view class="_view data-v-6bff4c82 comment-content-left"><image src="../../static/104.jpg" class="_image data-v-6bff4c82"></image></view><view class="_view data-v-6bff4c82 comment-content-right"><text class="_text data-v-6bff4c82 comment-nickname">LH_0811</text><text class="_text data-v-6bff4c82 say">这样不是吊打 tomcat跟 springboot有啥关系， webflux是不是也快44倍，同样都可以抛弃 tomcat做前后端分离的 api。 Tom cat优势主要是可以使用前段模版，肯定没有纯 api性能高</text><view class="_view data-v-6bff4c82 comment-bottom"><view class="_view data-v-6bff4c82 comment-bottom-left"><text class="_text data-v-6bff4c82 comment-info">2楼·04.06 10:50</text></view><view class="_view data-v-6bff4c82 comment-bottom-right"><image src="../../static/comment-8a.png" class="_image data-v-6bff4c82"></image><image src="../../static/thumb-up2.png" class="_image data-v-6bff4c82"></image></view></view></view></view></view><view class="_view data-v-6bff4c82 comment-end"><text class="_text data-v-6bff4c82 end">--end--</text></view><view class="_view data-v-6bff4c82 write-comment"><view class="_view data-v-6bff4c82 write-comment-1"><image src="../../static/write.png" class="_image data-v-6bff4c82"></image><input type="text" class="_input data-v-6bff4c82 writemsg" placeholder="写下你的评论..." /></view></view><view class="_view data-v-6bff4c82 bottom-bar"><view class="_view data-v-6bff4c82 bottom-bar-1"><view class="_view data-v-6bff4c82 praise"><image class="_image data-v-6bff4c82 img" src="../../static/赞赏收益.png"></image><text class="_text data-v-6bff4c82 bar-info">赞赏</text></view><view class="_view data-v-6bff4c82 praise"><image class="_image data-v-6bff4c82 img" src="../../static/comment-8a.png"></image><text class="_text data-v-6bff4c82 bar-info">评论 1</text></view><view class="_view data-v-6bff4c82 praise"><image class="_image data-v-6bff4c82 img" src="../../static/like.png" wx:if="{{like}}" bindtap="handleProxy" data-eventid="{{'39a44234-2'}}" data-comkey="{{$k}}"></image><image class="_image data-v-6bff4c82 img" src="../../static/select-like.png" wx:if="{{!like}}" bindtap="handleProxy" data-eventid="{{'39a44234-3'}}" data-comkey="{{$k}}"></image><text class="_text data-v-6bff4c82 bar-info">喜欢 {{number}}</text></view><view class="_view data-v-6bff4c82 praise"><image class="_image data-v-6bff4c82 img" src="../../static/share.png"></image><text class="_text data-v-6bff4c82 bar-info">分享</text></view></view></view></view></template>